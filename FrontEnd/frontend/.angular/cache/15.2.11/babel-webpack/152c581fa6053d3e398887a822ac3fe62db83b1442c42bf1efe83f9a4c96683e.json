{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet RegisterComponent = class RegisterComponent {\n  constructor(router, service) {\n    this.router = router;\n    this.service = service;\n    this.registration = {};\n    this.registrationData = [];\n    // registerDto!:RegisterDTO;\n    this.selectedFile = null;\n  }\n  ngOnInit() {\n    this.getAllCountries();\n  }\n  getAllCountries() {\n    this.service.getCountry().subscribe(countries => this.countries = countries);\n  }\n  onCountryChange(event) {\n    const countryId = event.value;\n    //this.countryId= event.target.value\n    this.service.getStateByCountryId(countryId).subscribe(states => this.states = states);\n  }\n  // onCountryChange(event: any): void {\n  //   this.selectedCountryId = event.target.value;\n  //   this.dataService.getStatesByCountryId(this.selectedCountryId).subscribe((states: any[]) => {\n  //     this.states = states;\n  //   });\n  // }\n  register() {\n    // const registerDto = {\n    //   countryId: this.countryId,\n    //   stateId: this.stateId\n    // };\n    const formData = new FormData();\n    formData.append('profilePic', this.selectedFile || '');\n    formData.append('registrationData', JSON.stringify(this.registration));\n    this.service.registerUser(formData).subscribe({\n      next: response => {\n        console.log(response);\n        alert(\"Registration Successfull\");\n        this.redirectToLogin;\n      },\n      error: error => console.error(error)\n    });\n  }\n  onFileSelected(event) {}\n  redirectToLogin() {\n    this.router.navigate(['/login']);\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAa7BC,YAAoBC,MAAa,EAAUC,OAAmB;IAA1C,WAAM,GAAND,MAAM;IAAiB,YAAO,GAAPC,OAAO;IAVjD,iBAAY,GAAQ,EAAE;IACtB,qBAAgB,GAAK,EAAE;IAExB;IACA,iBAAY,GAAgB,IAAI;EAMgC;EAEjEC,QAAQ;IACP,IAAI,CAACC,eAAe,EAAE;EAEvB;EAEAA,eAAe;IACb,IAAI,CAACF,OAAO,CAACG,UAAU,EAAE,CAACC,SAAS,CAACC,SAAS,IAC3C,IAAI,CAACA,SAAS,GAACA,SAAS,CAAC;EAC7B;EAGAC,eAAe,CAACC,KAAS;IACxB,MAAMC,SAAS,GAAED,KAAK,CAACE,KAAK;IAC3B;IACD,IAAI,CAACT,OAAO,CAACU,mBAAmB,CAACF,SAAS,CAAC,CAACJ,SAAS,CAACO,MAAM,IAC3D,IAAI,CAACA,MAAM,GAACA,MAAM,CAClB;EAEF;EAEA;EACA;EACA;EACA;EACA;EACA;EAGAC,QAAQ;IAEN;IACA;IACA;IACA;IAEA,MAAMC,QAAQ,GAAa,IAAIC,QAAQ,EAAE;IACvCD,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAE,IAAI,CAACC,YAAY,IAAI,EAAE,CAAC;IACtDH,QAAQ,CAACE,MAAM,CAAC,kBAAkB,EAAEE,IAAI,CAACC,SAAS,CAAC,IAAI,CAACC,YAAY,CAAC,CAAC;IAEzE,IAAI,CAACnB,OAAO,CAACoB,YAAY,CAACP,QAAQ,CAAC,CAACT,SAAS,CAAC;MAC7CiB,IAAI,EAAEC,QAAQ,IAAI;QAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACrBG,KAAK,CAAC,0BAA0B,CAAC;QACjC,IAAI,CAACC,eAAe;MACtB,CAAC;MACDC,KAAK,EAAEA,KAAK,IACTJ,OAAO,CAACI,KAAK,CAACA,KAAK;KAEtB,CACA;EACF;EAEAC,cAAc,CAACrB,KAAS,GAExB;EAEAmB,eAAe;IACb,IAAI,CAAC3B,MAAM,CAAC8B,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;CAEC;AA3EYhC,iBAAiB,eAL7BD,SAAS,CAAC;EACTkC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACWnC,iBAAiB,CA2E7B;SA3EYA,iBAAiB","names":["Component","RegisterComponent","constructor","router","service","ngOnInit","getAllCountries","getCountry","subscribe","countries","onCountryChange","event","countryId","value","getStateByCountryId","states","register","formData","FormData","append","selectedFile","JSON","stringify","registration","registerUser","next","response","console","log","alert","redirectToLogin","error","onFileSelected","navigate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Day User\\Apeksha Meshram\\Officials\\EcomWebSite\\FrontEnd\\frontend\\src\\app\\component\\register\\register.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EComService, RegisterDTO } from 'src/app/e.com.service';\n \n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  \n \n  registration: any = {};\n  registrationData:any=[];\n\n // registerDto!:RegisterDTO;\n selectedFile: File | null = null;\n  countries!: any[];\n  countryId!: number;\n  states!:any[];\n  stateId!:number;\n\n constructor(private router:Router, private service:EComService){}\n\nngOnInit(){\n this.getAllCountries();\n \n}\n\ngetAllCountries(){\n  this.service.getCountry().subscribe(countries=>\n    this.countries=countries);\n}\n\n\nonCountryChange(event:any):void {\n const countryId= event.value;\n  //this.countryId= event.target.value\n this.service.getStateByCountryId(countryId).subscribe(states=>\n  this.states=states\n );\n\n}\n\n// onCountryChange(event: any): void {\n//   this.selectedCountryId = event.target.value;\n//   this.dataService.getStatesByCountryId(this.selectedCountryId).subscribe((states: any[]) => {\n//     this.states = states;\n//   });\n// }\n\n\nregister():void{\n  \n  // const registerDto = {\n  //   countryId: this.countryId,\n  //   stateId: this.stateId\n  // };\n\n  const formData: FormData = new FormData();\n    formData.append('profilePic', this.selectedFile || '');\n    formData.append('registrationData', JSON.stringify(this.registration));\n\n this.service.registerUser(formData).subscribe({\n  next:(response) =>{\n    console.log(response)\n    alert(\"Registration Successfull\");\n    this.redirectToLogin\n  },\n  error:(error)=>\n     console.error(error) \n     \n }\n );\n}\n\nonFileSelected(event:any){\n\n}\n\nredirectToLogin(){\n  this.router.navigate(['/login']);\n}\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}