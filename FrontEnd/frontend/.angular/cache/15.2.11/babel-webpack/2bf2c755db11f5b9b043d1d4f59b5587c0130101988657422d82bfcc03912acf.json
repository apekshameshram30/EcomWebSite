{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EComService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = \"https://localhost:7123/api/Value/\";\n    this.loginUrl = \"https://localhost:7123/api/Value/Login\";\n    this.registerUrl = \"https://localhost:7123/api/Value/Registration\";\n    this.getProductUrl = \"https://localhost:7123/api/Value/GetAllProducts\";\n    this.getCountryUrl = \"https://localhost:7123/api/Value/GetCountry\";\n    this.getStateUrl = \"https://localhost:7123/api/Value/GetAllStates\";\n  }\n  loginUser(username, password) {\n    return this.http.post(this.loginUrl, {\n      username,\n      password\n    });\n  }\n  registerUser(data) {\n    return this.http.post(this.registerUrl, data);\n  }\n  getProduct() {\n    return this.http.get(this.getProductUrl);\n  }\n  getCountry() {\n    return this.http.get(this.getCountryUrl);\n  }\n  getStates() {\n    return this.http.get(this.getStateUrl);\n  }\n  getStateByCooountryId(countryId) {}\n  static #_ = this.ɵfac = function EComService_Factory(t) {\n    return new (t || EComService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EComService,\n    factory: EComService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IAGjB,YAAO,GAAC,mCAAmC;IAE1C,aAAQ,GAAE,wCAAwC;IAClD,gBAAW,GAAC,+CAA+C;IAC3D,kBAAa,GAAC,iDAAiD;IAC/D,kBAAa,GAAE,6CAA6C;IAC5D,gBAAW,GAAC,+CAA+C;EAT5B;EAWvCC,SAAS,CAACC,QAAe,EAACC,QAAe;IACvC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAM,IAAI,CAACC,QAAQ,EAAC;MAACH,QAAQ;MAACC;IAAQ,CAAC,CAAC;EAC/D;EAEAG,YAAY,CAACC,IAAQ;IACnB,OAAO,IAAI,CAACP,IAAI,CAACI,IAAI,CAAM,IAAI,CAACI,WAAW,EAACD,IAAI,CAAC;EACnD;EAEAE,UAAU;IACR,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAM,IAAI,CAACC,aAAa,CAAC;EAC/C;EAEAC,UAAU;IACR,OAAO,IAAI,CAACZ,IAAI,CAACU,GAAG,CAAQ,IAAI,CAACG,aAAa,CAAC;EACjD;EAEAC,SAAS;IACP,OAAO,IAAI,CAACd,IAAI,CAACU,GAAG,CAAQ,IAAI,CAACK,WAAW,CAAC;EAC/C;EAEAC,qBAAqB,CAACC,SAAgB,GAEtC;EAAC;qBAnCUnB,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAoB,SAAXpB,WAAW;IAAAqB,YAFV;EAAM","names":["EComService","constructor","http","loginUser","username","password","post","loginUrl","registerUser","data","registerUrl","getProduct","get","getProductUrl","getCountry","getCountryUrl","getStates","getStateUrl","getStateByCooountryId","countryId","factory","providedIn"],"sourceRoot":"","sources":["D:\\Day User\\Apeksha Meshram\\Officials\\EcomWebSite\\FrontEnd\\frontend\\src\\app\\e.com.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class EComService {\n\n  constructor(private http:HttpClient) { }\n\n\n private baseUrl=\"https://localhost:7123/api/Value/\";\n\n  private loginUrl= \"https://localhost:7123/api/Value/Login\";\n  private registerUrl=\"https://localhost:7123/api/Value/Registration\";\n  private getProductUrl=\"https://localhost:7123/api/Value/GetAllProducts\";\n  private getCountryUrl= \"https://localhost:7123/api/Value/GetCountry\";\n  private getStateUrl=\"https://localhost:7123/api/Value/GetAllStates\";\n  \n  loginUser(username:string,password:string):Observable<any>{\n    return this.http.post<any>(this.loginUrl,{username,password});\n  }\n  \n  registerUser(data:any):Observable<any>{\n    return this.http.post<any>(this.registerUrl,data);\n  }\n\n  getProduct():Observable<any>{\n    return this.http.get<any>(this.getProductUrl);\n  }\n  \n  getCountry():Observable<any[]>{\n    return this.http.get<any[]>(this.getCountryUrl);\n  }\n  \n  getStates():Observable<any[]>{\n    return this.http.get<any[]>(this.getStateUrl)\n  }\n\n  getStateByCooountryId(countryId:number){\n\n  }\n}\n\nexport interface RegisterDTO{\n  firstname:string;\n  lastname:string;\n  email:string;\n  usertype:string;\n  dob:Date;\n  mobile:number;\n  address:string;\n  zipcode:number;\n  countryId:number;\n  stateId:number;\n}\n\n// export interface CountryDTO{\n//   name:string;\n// }"]},"metadata":{},"sourceType":"module","externalDependencies":[]}