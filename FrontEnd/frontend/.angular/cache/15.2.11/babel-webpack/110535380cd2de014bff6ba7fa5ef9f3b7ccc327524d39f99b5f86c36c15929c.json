{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet RegisterComponent = class RegisterComponent {\n  constructor(router, service) {\n    this.router = router;\n    this.service = service;\n    this.registration = {};\n    this.selectedFile = null;\n    this.imageUrl = null;\n  }\n  ngOnInit() {\n    this.getAllCountries();\n    this.getAllStates();\n  }\n  getAllCountries() {\n    this.service.getCountry().subscribe(countries => this.countries = countries);\n  }\n  getAllStates() {\n    this.service.getStates().subscribe(states => this.states = states);\n  }\n  onCountryChange(event) {\n    const countryId = event.value;\n    this.service.getStateByCountryId(countryId).subscribe(states => this.states = states);\n  }\n  onFileSelected(event) {\n    const file = event.target.files[0];\n    if (file) {\n      this.selectedFile = file;\n      const reader = new FileReader();\n      reader.onload = () => {\n        this.imageUrl = reader.result;\n      };\n      reader.readAsDataURL(file);\n    }\n    //console.log(file);\n  }\n\n  register() {\n    debugger;\n    const formData = new FormData();\n    formData.append('profilePic', this.selectedFile || '');\n    formData.append('registrationData', this.registration);\n    //   let formData = new FormData();\n    // formData.append('firstName', this.registrationData.firstName ?? '');\n    // formData.append('lastName', this.registrationData.lastName ?? '');\n    // formData.append('email', this.registrationData.email ?? '');\n    // formData.append('userType', this.registrationData.userType ?? '');\n    // formData.append('dob', this.registrationData.dob instanceof Date ? this.registrationData.dob.toISOString() : '');\n    // formData.append('mobile', this.registrationData.mobile ?? '');\n    // formData.append('address', this.registrationData.address ?? '');\n    // formData.append('zipcode', this.registrationData.zipcode?.toString() ?? '');\n    // if (this.registrationData.image) {\n    //   formData.append('image', this.registrationData.image, this.registrationData.image.name);\n    // }\n    // formData.append('stateId', this.registrationData.stateId?.toString() ?? '');\n    // formData.append('countryId', this.registrationData.countryId?.toString() ?? '');\n    // Now you can send `formData` to your backend\n    // Now you can send `formData` to your backend\n    this.service.registerUser(formData).subscribe({\n      next: response => {\n        console.log(response);\n        alert(\"Registration Successfull\");\n        this.redirectToLogin;\n      },\n      error: error => console.error(error)\n    });\n  }\n  redirectToLogin() {\n    this.router.navigate(['/login']);\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAe7BC,YAAoBC,MAAa,EAAUC,OAAmB;IAA1C,WAAM,GAAND,MAAM;IAAiB,YAAO,GAAPC,OAAO;IAZjD,iBAAY,GAAQ,EAAE;IAItB,iBAAY,GAAgB,IAAI;IAMhC,aAAQ,GAAgC,IAAI;EAEmB;EAEjEC,QAAQ;IACP,IAAI,CAACC,eAAe,EAAE;IACtB,IAAI,CAACC,YAAY,EAAE;EAGpB;EAEAD,eAAe;IACb,IAAI,CAACF,OAAO,CAACI,UAAU,EAAE,CAACC,SAAS,CAACC,SAAS,IAC3C,IAAI,CAACA,SAAS,GAACA,SAAS,CAAC;EAC7B;EAEAH,YAAY;IACV,IAAI,CAACH,OAAO,CAACO,SAAS,EAAE,CAACF,SAAS,CAACG,MAAM,IAAI,IAAI,CAACA,MAAM,GAAEA,MAAM,CAAC;EACnE;EAEAC,eAAe,CAACC,KAAS;IACxB,MAAMC,SAAS,GAAED,KAAK,CAACE,KAAK;IAC5B,IAAI,CAACZ,OAAO,CAACa,mBAAmB,CAACF,SAAS,CAAC,CAACN,SAAS,CAAEG,MAAM,IAC5D,IAAI,CAACA,MAAM,GAACA,MAAM,CAAC;EAErB;EAGAM,cAAc,CAACJ,KAAU;IACvB,MAAMK,IAAI,GAASL,KAAK,CAACM,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACxC,IAAGF,IAAI,EAAC;MACJ,IAAI,CAACG,YAAY,GAAGH,IAAI;MACxB,MAAMI,MAAM,GAAE,IAAIC,UAAU,EAAE;MAC9BD,MAAM,CAACE,MAAM,GAAE,MAAI;QACjB,IAAI,CAACC,QAAQ,GAAGH,MAAM,CAACI,MAAM;MAC/B,CAAC;MACDJ,MAAM,CAACK,aAAa,CAACT,IAAI,CAAC;;IAG9B;EACF;;EAQAU,QAAQ;IAEN;IACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAE,IAAI,CAACV,YAAY,IAAI,EAAE,CAAC;IACtDQ,QAAQ,CAACE,MAAM,CAAC,kBAAkB,EAAE,IAAI,CAACC,YAAY,CAAC;IAExD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IAEE;IAGD,IAAI,CAAC7B,OAAO,CAAC8B,YAAY,CAACJ,QAAQ,CAAC,CAACrB,SAAS,CAAC;MAC7C0B,IAAI,EAAEC,QAAQ,IAAI;QAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACrBG,KAAK,CAAC,0BAA0B,CAAC;QACjC,IAAI,CAACC,eAAe;MACtB,CAAC;MACDC,KAAK,EAAEA,KAAK,IACTJ,OAAO,CAACI,KAAK,CAACA,KAAK;KAEtB,CAAC;EACH;EAKAD,eAAe;IACb,IAAI,CAACrC,MAAM,CAACuC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;CAEC;AA3GYzC,iBAAiB,eAL7BD,SAAS,CAAC;EACT2C,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACW5C,iBAAiB,CA2G7B;SA3GYA,iBAAiB","names":["Component","RegisterComponent","constructor","router","service","ngOnInit","getAllCountries","getAllStates","getCountry","subscribe","countries","getStates","states","onCountryChange","event","countryId","value","getStateByCountryId","onFileSelected","file","target","files","selectedFile","reader","FileReader","onload","imageUrl","result","readAsDataURL","register","formData","FormData","append","registration","registerUser","next","response","console","log","alert","redirectToLogin","error","navigate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Day User\\Apeksha Meshram\\Officials\\EcomWebSite\\FrontEnd\\frontend\\src\\app\\component\\register\\register.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EComService, RegisterDTO } from 'src/app/e.com.service';\n \n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  \n \n  registration: any = {};\n  \n\n  registerDto!:RegisterDTO;\n  selectedFile: File | null = null;\n  countries!: any[];\n  countryId!: number;\n  states!:any[];\n  stateId!:number;\n\n  imageUrl: string | ArrayBuffer | null = null;\n\n constructor(private router:Router, private service:EComService){}\n\nngOnInit(){\n this.getAllCountries();\n this.getAllStates();\n \n\n}\n\ngetAllCountries(){\n  this.service.getCountry().subscribe(countries=>\n    this.countries=countries);\n}\n\ngetAllStates(){\n  this.service.getStates().subscribe(states => this.states =states);\n}\n\nonCountryChange(event:any):void {\n const countryId= event.value;\n this.service.getStateByCountryId(countryId).subscribe((states) =>\n  this.states=states);\n\n}\n\n\nonFileSelected(event: any) {\n  const file: File = event.target.files[0];\n  if(file){\n      this.selectedFile = file;\n      const reader= new FileReader();\n      reader.onload= ()=>{\n        this.imageUrl = reader.result;\n      };\n      reader.readAsDataURL(file);\n  }\n \n  //console.log(file);\n}\n\n\n\n\n\n\n\nregister():void{\n\n  debugger\n  const formData = new FormData();\n  formData.append('profilePic', this.selectedFile || '');\n  formData.append('registrationData', this.registration);\n    \n//   let formData = new FormData();\n// formData.append('firstName', this.registrationData.firstName ?? '');\n// formData.append('lastName', this.registrationData.lastName ?? '');\n// formData.append('email', this.registrationData.email ?? '');\n// formData.append('userType', this.registrationData.userType ?? '');\n// formData.append('dob', this.registrationData.dob instanceof Date ? this.registrationData.dob.toISOString() : '');\n// formData.append('mobile', this.registrationData.mobile ?? '');\n// formData.append('address', this.registrationData.address ?? '');\n// formData.append('zipcode', this.registrationData.zipcode?.toString() ?? '');\n// if (this.registrationData.image) {\n//   formData.append('image', this.registrationData.image, this.registrationData.image.name);\n// }\n// formData.append('stateId', this.registrationData.stateId?.toString() ?? '');\n// formData.append('countryId', this.registrationData.countryId?.toString() ?? '');\n\n// Now you can send `formData` to your backend\n\n  // Now you can send `formData` to your backend\n  \n\n this.service.registerUser(formData).subscribe({\n  next:(response) =>{\n    console.log(response)\n    alert(\"Registration Successfull\");\n    this.redirectToLogin\n  },\n  error:(error)=>\n     console.error(error) \n     \n });\n}\n\n\n\n\nredirectToLogin(){\n  this.router.navigate(['/login']);\n}\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}